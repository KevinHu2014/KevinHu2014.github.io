<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: reactnative | Hsiangyu's Blog]]></title>
  <link href="https://hsiangyu.com/blog/categories/reactnative/atom.xml" rel="self"/>
  <link href="https://hsiangyu.com/"/>
  <updated>2018-01-06T21:13:30+08:00</updated>
  <id>https://hsiangyu.com/</id>
  <author>
    <name><![CDATA[Hsiangyu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ViroReact AR 初體驗]]></title>
    <link href="https://hsiangyu.com/blog/2018/01/05/ar/"/>
    <updated>2018-01-05T22:46:31+08:00</updated>
    <id>https://hsiangyu.com/blog/2018/01/05/ar</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>最近剛好拿到實驗室新採購的手機，一隻是ASUS 出的Zenfone AR，另一隻是Apple 出的iPhone X。前陣子在React Native Community的社群有survey到viromedia 這家公司做的AR套件，就花了時間研究了一下。</p>

<h2>正文</h2>

<p>會想要玩AR，是因為之前看到Snapchat&rsquo;s 新的AR 功能</p>

<iframe src="https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Fmashableclickclickclick%2Fvideos%2F10155694012049705%2F&show_text=0&width=476" width="476" height="476" style="border:none;overflow:hidden" scrolling="no" frameborder="0" allowTransparency="true" allowFullScreen="true"></iframe>


<p>想為公司的專案也加入AR的功能。由於公司的專案是用React Native來開發的，剛好viromedia有推出ViroReact，透過ViroReact可以去呼叫 iOS的 ARkit或是 Android的 ArCore，並透過同一份程式碼的特性來快速在雙平台上開發AR的應用。</p>

<p>接下來就快速帶一下安裝教學</p>

<p>所需設備</p>

<p>AR (iOS)</p>

<ol>
<li><p>iOS 裝置至少要是 A9 chip 而且 運行 iOS 11</p></li>
<li><p>OSX 的電腦</p></li>
</ol>


<p>AR (Android)</p>

<ol>
<li>支援ARCore 的手機</li>
</ol>


<!--more-->


<p>首先要確保你的電腦是有React Native的環境
<code>
npm install -g react-native-cli
</code></p>

<p>再來是安裝 VIROREACT COMMAND LINE INTERFACE
<code>
npm install -g react-viro-cli
</code>
接下來是初始一個 VIROREACT的專案
<code>
react-viro init ViroSample --verbose
</code>
然後要去下App 商店下載程式</p>

<p>iOS</p>

<p><a href="https://itunes.apple.com/us/app/viro-media/id1163100576?mt=8">Viro Media App</a></p>

<p>Android</p>

<p><a href="https://play.google.com/store/apps/details?id=com.viromedia.viromedia">Viro Media App</a></p>

<p>接著打開剛剛初始化的專案，找到<code>App.js</code>，將<code>API_KEY_HERE</code>置換成你的API Key。如果還沒有API的話，請去網站<a href="https://viromedia.com/signup">註冊</a>，註冊完後他會以Email的形式將API key寄給你。</p>

<p>再來是在terminal 啟動 package server
<code>
npm start
</code>
這邊要注意的是，不用去執行<code>react-native run-android</code>或<code>react-native run-ios</code>也不用去Xcode那邊開啟專案。
因為很重要，所以要特別提醒xD，跟以往的套件使用流程非常不一樣。</p>

<p>最後就要來測試我們的<code>TESTBED APP</code>了</p>

<ol>
<li>在你的 iOS或是 Andoroid裝置上開啟 Viro Media App</li>
<li>點擊左側的 Menu，然後點擊"Enter Testbed"</li>
<li>找到你的ngrok url <code>https://xxxxxx.ngrok.io</code>，他會顯示在你的npm start 的那個terminal 頁面，輸入後就按GO</li>
<li>會有兩個按鈕可以選，一個是 AR，另一個是 VR。這裡就選擇AR</li>
</ol>


<p>以上是參考官網 <a href="https://docs.viromedia.com/docs/quick-start">Quick Start</a>的翻譯和加入一些自己覺得該注意的地方</p>

<p>Hello World 的畫面大概如下</p>

<p><img src="https://s10.postimg.org/b6o1a3yu1/IMG_0004.png" alt="" /></p>

<p>如果有興趣繼續研究的話可以參考<a href="https://docs.viromedia.com/v2.2.0/docs/tutorial-ar">連結</a>，走完後的final大概如下圖</p>

<p><img src="https://s10.postimg.org/7aape1ljd/IMG_0005.png" alt="" /></p>

<p><img src="https://s10.postimg.org/gsf1rt9g9/IMG_0006.png" alt="" /></p>

<h2>後記</h2>

<p>實驗室的Zenfone AR 並不支援，目前支援ARCore的手機其實相當稀少（Pixel, Pixel XL, Pixel 2, Pixel 2 XL, and Samsung S8.），在未來應該會慢慢支援更多的 Android手機。
針對目前這個問題，Github上有開發者是透過修改Android Library來繞過 ARCore device check（<a href="https://github.com/tomthecarrot/arcore-for-all">連結</a>），不過我目前試了我手邊的手機都沒有成功，可能真的就要再等等吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PermissionsAndroid 坑]]></title>
    <link href="https://hsiangyu.com/blog/2017/09/04/react-native-permissionsandroid/"/>
    <updated>2017-09-04T17:50:59+08:00</updated>
    <id>https://hsiangyu.com/blog/2017/09/04/react-native-permissionsandroid</id>
    <content type="html"><![CDATA[<h1>Andoird 6.0 PermissionsAndroid 坑</h1>

<h2>前言</h2>

<p>最近開發公司的RN專案遇到一個問題，明明在 <code>AndroidManifest.xml</code>有加入了
<code>
  &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;
</code>
，但在執行的時候還是會噴error，接著就直接crash。
<a href="https://postimg.org/image/9cbhtb0yd/"><img src="https://s26.postimg.org/tjoxllyft/21706759_1435564026520969_1452689658_o.png" alt="error-message" /></a></p>

<p>到應用程式的設定去看，會發現<strong>位置</strong>的授權並沒有被開啟，可是我記得在<code>Andoird 5.0</code>之前是沒有這個問題的，最近把開發機升級到<code>Andoird 7.0</code>才遇到。</p>

<h2>正文</h2>

<p>深入研究後，才發現在<code>Andoird 6.0 (API 23)</code> 之後，危險權限都需要動態取得使用者授權。貼心的是React Native 有提供 <code>PermissionsAndroid</code> 的 API 來供你使用👏👏</p>

<!--more-->


<p>那 <code>PermissionsAndroid</code> 有提供三個 Methods:</p>

<h3>check (permission)</h3>

<p>檢查權限</p>

<blockquote><p>Returns a promise resolving to a boolean value as to whether the specified permissions has been granted</p></blockquote>

<p>範例：</p>

<pre><code class="javascript">
//檢查 Loaction Permission 為例

async checkLocationPermission() {
    try {
      const granted = await PermissionsAndroid.check(
        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION
      );
      if (granted === PermissionsAndroid.RESULTS.GRANTED) {
        console.log('客官已授予位置的權限');
      } else {
        console.log('客官尚未授予位置權限')
      }
    } catch (err) {
      console.warn(err);
    }
  }
</code></pre>

<h3>request(permission, rationale?)</h3>

<p>請求權限</p>

<blockquote><p>Prompts the user to enable a permission and returns a promise resolving to a string value indicating whether the user allowed or denied the request</p>

<p>If the optional rationale argument is included (which is an object with a title and message), this function checks with the OS whether it is necessary to show a dialog explaining why the permission is needed (<a href="https://developer.android.com/training/permissions/requesting.html#explain">https://developer.android.com/training/permissions/requesting.html#explain</a>) and then shows the system permission dialog</p></blockquote>

<p>rationale的參數可有可無，如果沒有的話，跳窗（dialog）就會顯示預設的訊息。</p>

<p>範例：</p>

<pre><code class="javascript">//請求 Camera Permission 為例

async requestCameraPermission() {
  try {
    const granted = await PermissionsAndroid.request(
      PermissionsAndroid.PERMISSIONS.CAMERA,
      {
        'title': 'Cool Photo App Camera Permission',
        'message': 'Cool Photo App needs access to your camera ' +
                   'so you can take awesome pictures.'
      }
    )
    if (granted === PermissionsAndroid.RESULTS.GRANTED) {
      console.log("You can use the camera")
    } else {
      console.log("Camera permission denied")
    }
  } catch (err) {
    console.warn(err)
  }
}
</code></pre>

<h3>requestMultiple(permissions)</h3>

<p>請求多個權限</p>

<blockquote><p>Prompts the user to enable multiple permissions in the same dialog and returns an object with the permissions as keys and strings as values indicating whether the user allowed or denied the request</p></blockquote>

<h3>使用流程</h3>

<p>我的使用流程會先去check 使用者是否已授權此權限，如果沒有的話則向使用者發出請求。</p>

<p>範例：</p>

<pre><code class="javascript">
componentWillMount() {
  this.checkLocationPermission();
}


// 檢查使用者的位置授權
async checkLocationPermission() {
  try {
    const granted = await PermissionsAndroid.check(
      PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION
    );
    if (granted === PermissionsAndroid.RESULTS.GRANTED || granted === true) {
      // 有拿到授權才去要 GPS
      this.askForGPS();
    } else {
      // 沒有授權的話就去向使用者請求
      this.requestLocationPermission();
    }
  } catch (err) {
    console.warn(err);
  }
}

async askForGPS() {
  //如果使用者沒有開啟GPS的話，要去跟他要
  LocationServicesDialogBox.checkLocationServicesIsEnabled({
      message: '&lt;h2&gt;Use Location ?&lt;/h2&gt;This app wants to change your device settings:&lt;br/&gt;&lt;br/&gt;Use GPS, Wi-Fi, and cell network for location&lt;br/&gt;&lt;br/&gt;',
      ok: 'YES',
      cancel: 'NO'
  }).then((success) =&gt; {
      //如果使用者有開啟gps才去抓他的位置
      navigator.geolocation.getCurrentPosition(
        (position) =&gt; {
          console.log(position.coords.latitude);
          console.log(position.coords.longitude);
        },
        (error) =&gt; { console.log(error); },
        { enableHighAccuracy: false, timeout: 20000, maximumAge: 1000 },
      );
      console.log(success); // success =&gt; "enabled"
  }).catch((error) =&gt; {
      this.setState({ alertVisible: true });
      console.log(error.message); // error.message =&gt; "disabled"
  });
}

async requestLocationPermission() {
  try {
    const granted = await PermissionsAndroid.request(
      PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION
    );
    if (granted === PermissionsAndroid.RESULTS.GRANTED  || granted === true) {
      console.log('現在你獲得GPS權限了');
      this.askForGPS();
    } else {
      console.log('用戶不理你');
    }
  } catch (err) {
    console.warn(err);
  }
}
</code></pre>

<p>這邊補充說明一下</p>

<pre><code class="javascript">
  if (granted === PermissionsAndroid.RESULTS.GRANTED  || granted === true){}
</code></pre>

<p>這邊要另外寫<code>granted === true</code> 是因為SDK 小於23 的話是回傳 true</p>

<blockquote><p>On devices before SDK version 23, the permissions are automatically granted if they appear in the manifest, so check and request should always be true.</p></blockquote>

<h3>叮嚀</h3>

<p>在測試這塊的時候要記得，除了測 SDK >= 23的版本之外， SDK &lt; 23 的也要記得測試。</p>

<h2>參考資料</h2>

<p><a href="https://facebook.github.io/react-native/docs/permissionsandroid.html">https://facebook.github.io/react-native/docs/permissionsandroid.html</a></p>
]]></content>
  </entry>
  
</feed>
